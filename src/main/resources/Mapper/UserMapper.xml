<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.javaweb1.mapper.UserMapper">
    <!--自定义映射规则：resultMap标签来完成映射规则的定义-->
    <resultMap id="UserEntityMap" type="com.example.javaweb1.entity.UserEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="birthday" jdbcType="VARCHAR" property="birthday"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="salt" jdbcType="CHAR" property="salt"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="motto" jdbcType="VARCHAR" property="motto"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user(username, password, nick_Name, sex, age, birthday, email, salt, avatar, is_delete)
        VALUES (#{username}, #{password}, #{nickName}, #{sex}, #{age}, #{birthday}, #{email}, #{salt}, #{avatar},
                #{isDelete})
    </insert>

    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT *
        FROM user
        WHERE username = #{username}
    </select>


    <update id="updatePasswordById">
        UPDATE
            user
        SET password = #{password}
        WHERE id = #{id}
    </update>

    <select id="findById" resultMap="UserEntityMap">
        SELECT *
        FROM user
        WHERE id = #{id}
    </select>

    <update id="updateInfoById">
        UPDATE
        user
        SET
        <if test="nickName != null">nick_name = #{nickName},</if>
        <if test="sex != null">sex = #{sex},</if>
        <if test="age != null">age= #{age},</if>
        <if test="birthday != null">birthday = #{birthday},</if>
        <if test="email != null">email = #{email},</if>
        <if test="motto != null">motto = #{motto}</if>
        WHERE
        id = #{id}
    </update>

    <update id="updateAvatarById">
        UPDATE
            user
        SET avatar = #{avatar}
        WHERE id = #{id}
    </update>

    <!--  <sql id="Example_Where_Clause">
      <where>
        <foreach collection="oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Base_Column_List">
      id, username, `password`, nick_name, sex, age, birthday, email, salt, avatar, is_delete
    </sql>
    <select id="selectByExample" parameterType="com.example.javaweb1.entity.UserExample" resultMap="BaseResultMap">
      select
      <if test="distinct">
        distinct
      </if>
      <include refid="Base_Column_List" />
      from user
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
      <if test="limit != null">
        <if test="offset != null">
          limit ${offset}, ${limit}
        </if>
        <if test="offset == null">
          limit ${limit}
        </if>
      </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user
      where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      delete from user
      where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.javaweb1.entity.UserExample">
      delete from user
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.javaweb1.entity.UserEntity" useGeneratedKeys="true">
      insert into user (username, `password`, nick_name,
        sex, age, birthday,
        email, salt, avatar, is_delete
        )
      values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{salt,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.javaweb1.entity.UserEntity" useGeneratedKeys="true">
      insert into user
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="username != null">
          username,
        </if>
        <if test="password != null">
          `password`,
        </if>
        <if test="nickName != null">
          nick_name,
        </if>
        <if test="sex != null">
          sex,
        </if>
        <if test="age != null">
          age,
        </if>
        <if test="birthday != null">
          birthday,
        </if>
        <if test="email != null">
          email,
        </if>
        <if test="salt != null">
          salt,
        </if>
        <if test="avatar != null">
          avatar,
        </if>
        <if test="isDelete != null">
          is_delete,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="username != null">
          #{username,jdbcType=VARCHAR},
        </if>
        <if test="password != null">
          #{password,jdbcType=VARCHAR},
        </if>
        <if test="nickName != null">
          #{nickName,jdbcType=VARCHAR},
        </if>
        <if test="sex != null">
          #{sex,jdbcType=INTEGER},
        </if>
        <if test="age != null">
          #{age,jdbcType=INTEGER},
        </if>
        <if test="birthday != null">
          #{birthday,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
          #{email,jdbcType=VARCHAR},
        </if>
        <if test="salt != null">
          #{salt,jdbcType=CHAR},
        </if>
        <if test="avatar != null">
          #{avatar,jdbcType=VARCHAR},
        </if>
        <if test="isDelete != null">
          #{isDelete,jdbcType=INTEGER},
        </if>
      </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.javaweb1.entity.UserExample" resultType="java.lang.Long">
      select count(*) from user
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
      update user
      <set>
        <if test="record.id != null">
          id = #{record.id,jdbcType=INTEGER},
        </if>
        <if test="record.username != null">
          username = #{record.username,jdbcType=VARCHAR},
        </if>
        <if test="record.password != null">
          `password` = #{record.password,jdbcType=VARCHAR},
        </if>
        <if test="record.nickName != null">
          nick_name = #{record.nickName,jdbcType=VARCHAR},
        </if>
        <if test="record.sex != null">
          sex = #{record.sex,jdbcType=INTEGER},
        </if>
        <if test="record.age != null">
          age = #{record.age,jdbcType=INTEGER},
        </if>
        <if test="record.birthday != null">
          birthday = #{record.birthday,jdbcType=VARCHAR},
        </if>
        <if test="record.email != null">
          email = #{record.email,jdbcType=VARCHAR},
        </if>
        <if test="record.salt != null">
          salt = #{record.salt,jdbcType=CHAR},
        </if>
        <if test="record.avatar != null">
          avatar = #{record.avatar,jdbcType=VARCHAR},
        </if>
        <if test="record.isDelete != null">
          is_delete = #{record.isDelete,jdbcType=INTEGER},
        </if>
      </set>
      <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByExample" parameterType="map">
      update user
      set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        `password` = #{record.password,jdbcType=VARCHAR},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=INTEGER},
        age = #{record.age,jdbcType=INTEGER},
        birthday = #{record.birthday,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        salt = #{record.salt,jdbcType=CHAR},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=INTEGER}
      <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.javaweb1.entity.UserEntity">
      update user
      <set>
        <if test="username != null">
          username = #{username,jdbcType=VARCHAR},
        </if>
        <if test="password != null">
          `password` = #{password,jdbcType=VARCHAR},
        </if>
        <if test="nickName != null">
          nick_name = #{nickName,jdbcType=VARCHAR},
        </if>
        <if test="sex != null">
          sex = #{sex,jdbcType=INTEGER},
        </if>
        <if test="age != null">
          age = #{age,jdbcType=INTEGER},
        </if>
        <if test="birthday != null">
          birthday = #{birthday,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
          email = #{email,jdbcType=VARCHAR},
        </if>
        <if test="salt != null">
          salt = #{salt,jdbcType=CHAR},
        </if>
        <if test="avatar != null">
          avatar = #{avatar,jdbcType=VARCHAR},
        </if>
        <if test="isDelete != null">
          is_delete = #{isDelete,jdbcType=INTEGER},
        </if>
      </set>
      where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.javaweb1.entity.UserEntity">
      update user
      set username = #{username,jdbcType=VARCHAR},
        `password` = #{password,jdbcType=VARCHAR},
        nick_name = #{nickName,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=INTEGER},
        age = #{age,jdbcType=INTEGER},
        birthday = #{birthday,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        salt = #{salt,jdbcType=CHAR},
        avatar = #{avatar,jdbcType=VARCHAR},
        is_delete = #{isDelete,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
    </update>-->
</mapper>